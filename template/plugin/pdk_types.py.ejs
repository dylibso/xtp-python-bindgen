# THIS FILE WAS GENERATED BY `xtp-python-bindgen`. DO NOT EDIT.

from __future__ import annotations
from enum import Enum # noqa: F401
from typing import Optional, List # noqa: F401
from datetime import datetime # noqa: F401
from dataclasses import dataclass # noqa: F401

import extism # noqa: F401 # pyright: ignore

<% Object.values(schema.schemas).forEach(schema => { %>
    <% if (schema.enum) { %>
class <%- pythonTypeName(schema.name) %>(Enum):
<% schema.enum.forEach(variant => { -%>
  <%- pythonTypeName(variant) %> = "<%- variant %>"
<% }) %>
    <% } else { %>
@dataclass
class <%- pythonTypeName(schema.name) %>(extism.Json):
<% schema.properties.forEach(p => { -%>
<% if (!p.nullable && p.required) {%>
  <% if (p.description) { -%>
    # <%- formatCommentBlock(p.description, "# ") %>
  <% } -%>
  <%- p.name %>: <%- toPythonType(p, p.required) %>
<% } %>
<% }) %>

<% schema.properties.forEach(p => { -%>
<% if (p.nullable || !p.required) {%>
  <% if (p.description) { -%>
    # <%- formatCommentBlock(p.description, "# ") %>
  <% } -%>
  <%- p.name %>: <%- toPythonType(p, p.required) %> = None
<% } %>
<% }) %>

<% } %>
<% }); %>

